{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

(int) tlen (tuple t) asm "TLEN";

(int) dot_product(tuple vecA, tuple vecB) inline {
  int out = 0;
  var i = 0;
  repeat (vecA.tlen()) {
    out += vecA.at(i) * vecB.at(i);
    i += 1;
  }
  return out;
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  tuple out = empty_tuple();
  var i = 0;
  repeat (matrixA.tlen()) {
    tuple row = empty_tuple();
    var j = 0;
    repeat (matrixB.at(0).tlen()) {
      tuple col = empty_tuple();
      var k = 0;
      repeat (matrixB.tlen()) {
        col~tpush(matrixB.at(k).at(j));
        k += 1;
      }
      row~tpush(dot_product(matrixA.at(i), col));
      j += 1;
    }
    out~tpush(row);
    i += 1;
  }
  return out;
}

